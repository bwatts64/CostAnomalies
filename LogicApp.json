{
  "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
          "Days_to_Look_Back": {
              "inputs": {
                  "variables": [
                      {
                          "name": "Age",
                          "type": "integer",
                          "value": -30
                      }
                  ]
              },
              "runAfter": {},
              "type": "InitializeVariable"
          },
          "Delete_Export_Job": {
              "inputs": {
                  "authentication": {
                      "audience": "https://management.azure.com",
                      "type": "ManagedServiceIdentity"
                  },
                  "method": "DELETE",
                  "uri": "https://management.azure.com/@{variables('scope')}/providers/Microsoft.CostManagement/exports/@{variables('ExportName')}?api-version=2019-11-01"
              },
              "runAfter": {
                  "EndDate": [
                      "Succeeded"
                  ]
              },
              "type": "Http"
          },
          "EndDate": {
              "inputs": {
                  "variables": [
                      {
                          "name": "EndDate",
                          "type": "string",
                          "value": "@{formatDateTime(utcNow(), 'yyyy-MM-dd')}"
                      }
                  ]
              },
              "runAfter": {
                  "StartDate": [
                      "Succeeded"
                  ]
              },
              "type": "InitializeVariable"
          },
          "Execute_Export_Job": {
              "inputs": {
                  "authentication": {
                      "audience": "https://management.azure.com",
                      "type": "ManagedServiceIdentity"
                  },
                  "method": "POST",
                  "uri": "https://management.azure.com/@{variables('scope')}/providers/Microsoft.CostManagement/exports/@{variables('ExportName')}/run?api-version=2019-11-01"
              },
              "runAfter": {
                  "Update_Export_Job": [
                      "Succeeded"
                  ]
              },
              "type": "Http"
          },
          "Export_Name": {
              "inputs": {
                  "variables": [
                      {
                          "name": "ExportName",
                          "type": "string",
                          "value": "MSInternal90Days"
                      }
                  ]
              },
              "runAfter": {
                  "Days_to_Look_Back": [
                      "Succeeded"
                  ]
              },
              "type": "InitializeVariable"
          },
          "FilePath": {
              "inputs": {
                  "variables": [
                      {
                          "name": "FilePath",
                          "type": "string"
                      }
                  ]
              },
              "runAfter": {
                  "Status": [
                      "Succeeded"
                  ]
              },
              "type": "InitializeVariable"
          },
          "Query_Scope": {
              "inputs": {
                  "variables": [
                      {
                          "name": "scope",
                          "type": "string",
                          "value": "subscriptions/5f1c1322-cebc-4ea3-8779-fac7d666e18f"
                      }
                  ]
              },
              "runAfter": {
                  "Export_Name": [
                      "Succeeded"
                  ]
              },
              "type": "InitializeVariable"
          },
          "StartDate": {
              "inputs": {
                  "variables": [
                      {
                          "name": "StartDate",
                          "type": "string",
                          "value": "@{addDays(utcNow(),variables('Age'), 'yyyy-MM-dd')}"
                      }
                  ]
              },
              "runAfter": {
                  "Query_Scope": [
                      "Succeeded"
                  ]
              },
              "type": "InitializeVariable"
          },
          "Status": {
              "inputs": {
                  "variables": [
                      {
                          "name": "Status",
                          "type": "string",
                          "value": "InProgress"
                      }
                  ]
              },
              "runAfter": {
                  "Execute_Export_Job": [
                      "Succeeded"
                  ]
              },
              "type": "InitializeVariable"
          },
          "Update_Export_Job": {
              "inputs": {
                  "authentication": {
                      "audience": "https://management.azure.com",
                      "type": "ManagedServiceIdentity"
                  },
                  "body": {
                      "properties": {
                          "definition": {
                              "dataset": {
                                  "configuration": {
                                      "columns": [
                                          "UsageDateTime",
                                          "MeterId",
                                          "InstanceId",
                                          "ResourceLocation",
                                          "PreTaxCost",
                                          "ResourceGroup",
                                          "ResourceType",
                                          "TagsDy"
                                      ]
                                  },
                                  "granularity": "Daily"
                              },
                              "timePeriod": {
                                  "from": "@{variables('StartDate')}",
                                  "to": "@{variables('EndDate')}"
                              },
                              "timeframe": "Custom"
                          },
                          "deliveryInfo": {
                              "destination": {
                                  "container": "cost",
                                  "resourceId": "/subscriptions/5f1c1322-cebc-4ea3-8779-fac7d666e18f/resourceGroups/costanamolies/providers/Microsoft.Storage/storageAccounts/costanalysissa",
                                  "rootFolderPath": "data"
                              }
                          },
                          "format": "Csv",
                          "schedule": {
                              "recurrence": "Daily",
                              "recurrencePeriod": {
                                  "from": "@{addDays(utcNow(),2, 'yyyy-MM-dd')}",
                                  "to": "@{addDays(utcNow(),4, 'yyyy-MM-dd')}"
                              },
                              "status": "Inactive"
                          }
                      }
                  },
                  "method": "PUT",
                  "uri": "https://management.azure.com/@{variables('scope')}/providers/Microsoft.CostManagement/exports/@{variables('ExportName')}?api-version=2019-11-01"
              },
              "runAfter": {
                  "Delete_Export_Job": [
                      "Succeeded",
                      "Failed"
                  ]
              },
              "type": "Http"
          },
          "Wait_for_execution_to_complete": {
              "actions": {
                  "Get_Execution_History": {
                      "inputs": {
                          "authentication": {
                              "audience": "https://management.azure.com",
                              "type": "ManagedServiceIdentity"
                          },
                          "method": "GET",
                          "uri": "https://management.azure.com/@{variables('scope')}/providers/Microsoft.CostManagement/exports/@{variables('ExportName')}/runHistory?api-version=2019-11-01"
                      },
                      "runAfter": {
                          "Wait_10min": [
                              "Succeeded"
                          ]
                      },
                      "type": "Http"
                  },
                  "Parse_Body": {
                      "inputs": {
                          "content": "@body('Get_Execution_History')",
                          "schema": {
                              "properties": {
                                  "value": {
                                      "items": {
                                          "properties": {
                                              "eTag": {},
                                              "id": {
                                                  "type": "string"
                                              },
                                              "name": {},
                                              "properties": {
                                                  "properties": {
                                                      "executionType": {
                                                          "type": "string"
                                                      },
                                                      "fileName": {},
                                                      "processingEndTime": {},
                                                      "processingStartTime": {},
                                                      "runSettings": {
                                                          "properties": {
                                                              "definition": {
                                                                  "properties": {
                                                                      "dataSet": {
                                                                          "properties": {
                                                                              "configuration": {
                                                                                  "properties": {
                                                                                      "columns": {
                                                                                          "items": {
                                                                                              "type": "string"
                                                                                          },
                                                                                          "type": "array"
                                                                                      }
                                                                                  },
                                                                                  "type": "object"
                                                                              },
                                                                              "granularity": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "type": "object"
                                                                      },
                                                                      "timePeriod": {
                                                                          "properties": {
                                                                              "from": {
                                                                                  "type": "string"
                                                                              },
                                                                              "to": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "type": "object"
                                                                      },
                                                                      "timeframe": {
                                                                          "type": "string"
                                                                      },
                                                                      "type": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "type": "object"
                                                              },
                                                              "deliveryInfo": {
                                                                  "properties": {
                                                                      "destination": {
                                                                          "properties": {
                                                                              "container": {
                                                                                  "type": "string"
                                                                              },
                                                                              "resourceId": {
                                                                                  "type": "string"
                                                                              },
                                                                              "rootFolderPath": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "type": "object"
                                                                      }
                                                                  },
                                                                  "type": "object"
                                                              },
                                                              "format": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "status": {
                                                          "type": "string"
                                                      },
                                                      "submittedBy": {},
                                                      "submittedTime": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "type": "object"
                                              },
                                              "type": {}
                                          },
                                          "required": [
                                              "id",
                                              "name",
                                              "type",
                                              "eTag",
                                              "properties"
                                          ],
                                          "type": "object"
                                      },
                                      "type": "array"
                                  }
                              },
                              "type": "object"
                          }
                      },
                      "runAfter": {
                          "Get_Execution_History": [
                              "Succeeded"
                          ]
                      },
                      "type": "ParseJson"
                  },
                  "Set_File_Name": {
                      "inputs": {
                          "name": "FilePath",
                          "value": "@{first(body('Parse_Body')?['value'])?['properties']?['fileName']}"
                      },
                      "runAfter": {
                          "Set_Status": [
                              "Succeeded"
                          ]
                      },
                      "type": "SetVariable"
                  },
                  "Set_Status": {
                      "inputs": {
                          "name": "Status",
                          "value": "@{first(body('Parse_Body')?['value'])?['properties']?['status']}"
                      },
                      "runAfter": {
                          "Parse_Body": [
                              "Succeeded"
                          ]
                      },
                      "type": "SetVariable"
                  },
                  "Wait_10min": {
                      "inputs": {
                          "interval": {
                              "count": 10,
                              "unit": "Minute"
                          }
                      },
                      "runAfter": {},
                      "type": "Wait"
                  }
              },
              "expression": "@equals(variables('Status'), 'Completed')",
              "limit": {
                  "count": 60,
                  "timeout": "PT1H"
              },
              "runAfter": {
                  "FilePath": [
                      "Succeeded"
                  ]
              },
              "type": "Until"
          }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {},
      "triggers": {
          "Recurrence": {
              "recurrence": {
                  "frequency": "Hour",
                  "interval": 24,
                  "startTime": "2020-05-08T14:00:00Z"
              },
              "type": "recurrence"
          }
      }
  },
  "parameters": {}
}